{\rtf1\ansi\ansicpg1252\cocoartf1671
\stshfdbch0{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
{\stylesheet {\s0 Normal;}}
{\*\expandedcolortbl;;}
{\info
{\author Phil Sturgeon}
{\creatim\yr2018\mo1\dy3\hr12\min16\sec9\timesinceref536670969}
{\revtim\yr2018\mo1\dy20\hr19\min5\sec42\timesinceref538164342}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\f0\fs28 \cf0 At Kapture, we created a `social` grant, where a user would provide a string matching `"facebook"` or `"twitter"` and an `access_token` (with maybe a `access_token_secret` for OAuth 1.0a providers like Twitter) and that would do the following:\
1. Grab the user's data\
1. Find out if they are a Kapture user, and if not create a Kapture user record\
3. Create an access token, refresh token, etc. to give that user access\
That gave us a completely seamless instant sign-up or log in experience for our iPhone application, and let our\
admin panel AND merchant dashboard use the exact same OAuth 2.0 server to handle logins for everyone. Very\
handy for our iPhone app and meant that we could roll the same functionality out to a potential Android app\
and web-based versions too.\
If you can think of it, you can make a custom grant type for it. Grant access to any users that provide you with\
a URL of an image, which contains a photograph of a car which happens to be yellow. Whatever.\
[Section 4.1]: http://tools.ietf.org/html/rfc6749#section-4.1\
[Section 6]: http://tools.ietf.org/html/rfc6749#section-6\
[Section 2.3.1]: http://tools.ietf.org/html/rfc6749#section-2.3.1\
[Section 4.3]: http://tools.ietf.org/html/rfc6749#section-4.3}