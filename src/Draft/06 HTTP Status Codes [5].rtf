{\rtf1\ansi\ansicpg1252\cocoartf1671
\stshfdbch0{\fonttbl\f0\fnil\fcharset0 Cochin;\f1\fnil\fcharset0 Menlo-Regular{\*\falt Menlo Regular};\f2\fnil\fcharset0 Cochin-Bold{\*\falt Cochin Bold};
}
{\colortbl;\red255\green255\blue255;}
{\stylesheet {\s0 Normal;}{\s1 \tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0\b\fs36\cf0\outlinelevel1 Heading 1;}{\s2 \tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0\b\fs26\cf0\outlinelevel2 Heading 2;}{\s3 \tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\pardirnatural\partightenfactor0\fs22\cf0 Code Block;}}
{\*\expandedcolortbl;;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}}
{\info
{\author Phil Sturgeon}
{\creatim\yr2018\mo1\dy2\hr12\min33\sec35\timesinceref536585615}
{\revtim\yr2018\mo1\dy20\hr19\min43\sec10\timesinceref538166590}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\fs28 \cf0 A status code is a category of success or failure, with specific codes being provided for a range of situations, that are essentially metadata supplementing the body returned from the API. Back in the early 2000s when AJAX was first a thing, it was far too common for people to ignore everything other than the body, and return some XML or JSON saying:\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s3
\f1\fs22 \cf0 \{ \'93success\'94: true \}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\fs28 \cf0 These days it\'92s far more common to utilize HTTP properly, and give the response a status code as defined in the RFC have a number from `200` to `507` \'96 with plenty of gaps in between \'96 and each has a message and a definition. Most server-side languages, frameworks, etc., default to `200 OK`.\
Status codes are grouped into a few different categories:, with the first number being an identifier of the category of thing that happened.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0

\s2
\f2\b\fs26 \cf0 2xx is all about success\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\b0\fs28 \cf0 Whatever your application tried to do was successful, up to the point that the response was sent. A 200 OK means you got your answer, a 201 Created means the thing was created, but keep in mind that a 202 Accepted does not say anything about the actual result, it only indicates that a request was accepted and is being processed asynchronously. It could still go wrong, but at the time of responding it was all looking good so far.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0

\s2
\f2\b\fs26 \cf0 3xx is all about redirection\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\b0\fs28 \cf0 These are all about sending the calling application somewhere else for the actual resource. The best known of these are the `303 See Other` and the `301 Moved Permanently`, which are used a lot on the web to redirect a browser to another URL. Some folks use a `Location` header to point to the content, so if you see a 3xx check for that.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0

\s2
\f2\b\fs26 \cf0 4xx is all about client errors\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\b0\fs28 \cf0 With these status codes, APIs indicate that the client has done something invalid and needs to fix the request before resending it.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0

\s2
\f2\b\fs26 \cf0 5xx is all about service errors\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\b0\fs28 \cf0 With these status codes, the API is indicating that something went wrong in their side. For example, a database connection failed, or another service was down. Typically, a client application can retry the request. The server can even specify when the client should retry, using a `Retry-After` HTTP header.
\fs24 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\sl264\slmult1\sb260\pardirnatural\partightenfactor0

\s1
\f2\b\fs36 \cf0 Common Status Codes\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\b0\fs28 \cf0 Arguments between developers will continue for the rest of time over the exact appropriate code to use in any given situation, but these are the most important status codes to look out for in an API:\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-500\sl264\slmult1\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs26 \cf0 {\listtext	\uc0\u8226 	}200 - Generic everything is OK\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-500\sl288\slmult1\sb160\pardirnatural\partightenfactor0
\ls1\ilvl0
\fs28 \cf0 {\listtext	\uc0\u8226 	}201 - Created something OK\
{\listtext	\uc0\u8226 	}202 - Accepted but is being processed async (for a video means encoding, for an image means resizing, etc.)\
{\listtext	\uc0\u8226 	}400 - Bad Request (should really be for invalid syntax, but some folks use for validation)\
{\listtext	\uc0\u8226 	}401 - Unauthorized (no current user and there should be)\
{\listtext	\uc0\u8226 	}403 - The current user is forbidden from accessing this data\
{\listtext	\uc0\u8226 	}404 - That URL is not a valid route, or the item resource does not exist\
{\listtext	\uc0\u8226 	}405 - Method Not Allowed (your framework will probably do this for you)\
{\listtext	\uc0\u8226 	}409 - Conflict (Maybe somebody else just changed some of this data, or status cannot change from e.g: \'93published\'94 to \'93draft\'94)\
{\listtext	\uc0\u8226 	}410 - Data has been deleted, deactivated, suspended, etc.\
{\listtext	\uc0\u8226 	}415 - The request had a `Content-Type` which the server does not know how to handle\
{\listtext	\uc0\u8226 	}429 - Rate Limited, which means take a breather, sleep a bit, try again\
{\listtext	\uc0\u8226 	}500 - Something unexpected happened, and it is the APIs fault\
{\listtext	\uc0\u8226 	}503 - API is not here right now, please try again later\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0
\cf0 You might spot others popping up from time to time, so check on {\field{\*\fldinst{HYPERLINK "http://http.cat/"}}{\fldrslt http.cats}} (or {\field{\*\fldinst{HYPERLINK "http://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml"}}{\fldrslt iana.org}} for a more formal list) when you see one that\'92s not familiar.}