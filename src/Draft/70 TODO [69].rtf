{\rtf1\ansi\ansicpg1252\cocoartf1671
\stshfdbch0{\fonttbl\f0\fnil\fcharset0 Cochin;\f1\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue233;}
{\stylesheet {\s0 Normal;}}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c93333;}
{\info
{\author Phil Sturgeon}
{\creatim\yr2017\mo12\dy21\hr22\min15\sec21\timesinceref535583721}
{\revtim\yr2018\mo7\dy27\hr15\min35\sec1\timesinceref554391301}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\f0\fs28 \cf0 \
	- What can go wrong\
Use runscope as a proxy whilst you\'92re developing, and do it in staging to see whats up. Honestly we\'92ve used it in production for a while too, and had clients retry on the direct URL if runscope was unavailable. This was never an issue but paranoia.\
	- Performance\
Make the most efficient HTTP calls you can. You might be making HTTP calls with a network library built into the language, or one built by somebody else. Either way, ensure it\'92s using HTTP/1.1 with keep alive on it, and if possible use a HTTP/2 client library.\
HTTP/1.1 keep alive can knock 20% off of repeated connections to the same host depending on how that connection is maintained.\
HTTP/2 is baller and async is cool. If they dont use HTTP/2 you can give yourself some with a proxy.\
APIs might vanish without a moments notice, maybe ask your backend friends to make a proxy or abstraction layer. Or ensure you have an SLA if its important. Google likes to kill its free APIs and startups can go bust at a moments notice.\
\
Protobuf required is forever or used to be, now yay optional everything\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\fi360\sl288\slmult1\sb160\pardirnatural\partightenfactor0
{\field{\*\fldinst{HYPERLINK "https://developers.google.com/protocol-buffers/docs/pythontutorial"}}{\fldrslt \cf0 https://developers.google.com/protocol-buffers/docs/pythontutorial}}\
\
Testing\
\pard\pardeftab720\partightenfactor0
{\field{\*\fldinst{HYPERLINK "http://docs.guzzlephp.org/en/stable/testing.html"}}{\fldrslt 
\f1\fs26 \cf2 \expnd0\expndtw0\kerning0
\ul \ulc2 http://docs.guzzlephp.org/en/stable/testing.html}}
\f1\fs26 \expnd0\expndtw0\kerning0
\
\
Mock servers are pretty cool, theres also PHP VCR for capturing real responses and using them to generate stubs.}