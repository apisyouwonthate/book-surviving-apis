{\rtf1\ansi\ansicpg1252\cocoartf1671
\stshfdbch0{\fonttbl\f0\fnil\fcharset0 Cochin;\f1\fnil\fcharset0 Menlo-Regular{\*\falt Menlo Regular};\f2\fmodern\fcharset0 Courier;
}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
{\stylesheet {\s0 Normal;}{\s1 \tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\pardirnatural\partightenfactor0\fs22\cf0 Code Block;}}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;}
{\info
{\author Phil Sturgeon}
{\creatim\yr2018\mo1\dy2\hr12\min39\sec10\timesinceref536585950}
{\revtim\yr2018\mo1\dy20\hr19\min31\sec35\timesinceref538165895}}\paperw12240\paperh15840\margl1800\margr1800\margt1440\margb1440\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\li720\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s0
\f0\fs28 \cf0 Headers have been mentioned a few times, and they\'92re another great feature for HTTP.\
HTTP headers are meta-data about the request or response, and control all sorts of things, like the Content Type (is this JSON or XML), or cache controls (how long should this data be cached for), etc. \
For example, some APIs accept \'93form data\'94, as well as JSON. It\'92s important to understand which is being sent by default, and which the API wants. \
\pard\pardeftab720\sl288\slmult1\sb160\partightenfactor0
\cf0 	Sending form data might look like this:\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s1
\f1\fs22 \cf0 var querystring = require('querystring');\
var instance = axios.create(\{\
  baseURL: 'https://api.example.com/',\
  headers: \{'Content-Type': 'application/x-www-form-urlencoded'\}\
\});\
instance.post('/hello', querystring.stringify(\{someParam: 'Some value'));
\f2\fs24 \expnd0\expndtw0\kerning0
\
\pard\pardeftab720\sl288\slmult1\sb160\partightenfactor0

\s0
\f0\fs28 \cf0 \kerning1\expnd0\expndtw0 	Sending the same data as JSON might look a little more like this:
\f2\fs24 \cf2 \expnd0\expndtw0\kerning0
\
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s1
\f1\fs22 \cf2 var instance = axios.create(\{\
  baseURL: 'https://api.example.com/',\
  headers: \{'Content-Type': 'application/json'\}\
\});\
instance.post('/hello', JSON.stringify(\{someParam: 'Some value'));\cf0 \kerning1\expnd0\expndtw0 \
\pard\pardeftab720\sl288\slmult1\sb160\partightenfactor0

\s0
\f0\fs28 \cf0 	Notice the only real difference here is that we have changed the Content-Type, and changed how we generate the string. HTTP APIs are very flexible in this way.\
	Some APIs will let you request data in a format relevant to your needs: CSV, YAML, or other more complex binary formats, which we\'92ll get into later. You simply need to supply the {\field{\*\fldinst{HYPERLINK "http://wikipedia.org/wiki/Media_type"}}{\fldrslt media type}}, and if the API has it you\'92ll get it back. \
\pard\tx220\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\li720\fi-720\sl288\slmult1\sb160\pardirnatural\partightenfactor0

\s1
\f1\fs22 \cf0 var instance = axios.create(\{\
  baseURL: 'https://api.example.com/',\
  headers: \{'Accept': 'application/csv'\}\
\});\
instance.get('/reports/123');\
\pard\pardeftab720\sl288\slmult1\sb160\partightenfactor0

\s0
\f0\fs28 \cf0 	If you try requesting a media type that the API has not defined, you will probably end up with a {\field{\*\fldinst{HYPERLINK "http://tools.ietf.org/html/rfc7231#section-6.5.6"}}{\fldrslt 406 Not Acceptable}} response. \
	Headers can do a whole lot more than just switch content types, but we will look at relevant headers in relevant content as we go.}